#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/2.1/doc/configuration.txt
#   https://github.com/kavirajan2/haproxy
#
#---------------------------------------------------------------------
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global

    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    # daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main https frontend which proxys to the backends and add SSL path
#---------------------------------------------------------------------
frontend www-https
    bind *:443 ssl crt /usr/local/etc/haproxy/domain.pem
    reqadd X-Forwarded-Proto:\ https

    acl host_gatewayservice hdr(host) -i api-qa.example.com
    acl host_signalserver hdr(host) -i signal-service-qa.example.com

    use_backend subdomain1 if host_gatewayservice
    use_backend subdomain2 if host_signalserver

#---------------------------------------------------------------------
# main http frontend which proxys to the backends
#---------------------------------------------------------------------
frontend http_frontend
    bind *:80

    acl web_host1 hdr(host) -i api-qa.example.com
    acl web_host2 hdr(host) -i signal-service-qa.example.com

    use_backend subdomain1 if web_host1
    use_backend subdomain2 if web_host2


#---------------------------------------------------------------------
# Subdomain 1 backend point
#---------------------------------------------------------------------
backend subdomain1
    balance leastconn
    http-request set-header X-Client-IP %[src]
    redirect scheme https if !{ ssl_fc }
    server SUBDOMAIN1 gatewayservice:80 check


#---------------------------------------------------------------------
# Subdomain 2 backend point
#---------------------------------------------------------------------
backend subdomain2
    balance leastconn
    http-request set-header X-Client-IP %[src]
    redirect scheme https if !{ ssl_fc }
    server SUBDOMAIN2 signalserver:80 check
